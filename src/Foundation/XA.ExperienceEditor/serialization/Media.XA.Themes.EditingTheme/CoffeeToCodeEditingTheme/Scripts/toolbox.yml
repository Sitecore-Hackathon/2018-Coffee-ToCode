---
ID: "d08b13a9-45f4-4e70-8c72-e1ca77286d30"
Parent: "8436240f-ddcf-46b6-9eed-b77f76212ba6"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Base Themes/CoffeeToCodeEditingTheme/Scripts/toolbox
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/D08B13A945F44E708C72E1CA77286D30.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "4d4066ec-4951-452b-9d77-79df51c0f2e7"
  Value: 
- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 23506
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: "application/x-javascript"
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: js
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20160509T085839Z
